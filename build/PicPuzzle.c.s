#NO_APP
	.file	"PicPuzzle.c"
	.text
	.section	.text.BUTTONFRAMEPROC,"ax",@progbits
	.align	2
	.globl	BUTTONFRAMEPROC
	.type	BUTTONFRAMEPROC, @function
BUTTONFRAMEPROC:
	link.w %fp,#-16
	move.l %d3,-(%sp)
	move.l 10(%fp),-(%sp)
	move.w #1,-(%sp)
	pea -14(%fp)
	pea -12(%fp)
	move.l %fp,%d3
	subq.l #8,%d3
	move.l %d3,-(%sp)
	.short 0xa98d
	move.l %d3,-(%sp)
	move.w #-4,-(%sp)
	move.w #-4,-(%sp)
	.short 0xa8a9
	move.w #3,-(%sp)
	move.w #3,-(%sp)
	.short 0xa89b
	move.l %d3,-(%sp)
	move.w #16,-(%sp)
	move.w #16,-(%sp)
	.short 0xa8b0
	move.l -20(%fp),%d3
	unlk %fp
	move.l (%a7)+, %a0
	lea 6.w(%a7), %a7
	jmp (%a0)
	.size	BUTTONFRAMEPROC, .-BUTTONFRAMEPROC
	.pushsection .text.BUTTONFRAMEPROC.macsbug,"ax",@progbits
# macsbug symbol
	.byte 143
	.ascii	"BUTTONFRAMEPROC"
	.align 2,0
	.short 0
	.popsection
	.section	.text._log,"ax",@progbits
	.align	2
	.globl	_log
	.type	_log, @function
_log:
	link.w %fp,#-64
	move.l %d3,-(%sp)
	move.l 8(%fp),%d3
	move.l %d3,-(%sp)
	jsr strlen
	move.b %d0,-64(%fp)
	moveq #0,%d1
	not.b %d1
	and.l %d0,%d1
	move.l %d1,(%sp)
	move.l %d3,-(%sp)
	pea -63(%fp)
	jsr memcpy
	move.b _log_line,%d1
	move.b %d1,%d2
	addq.b #1,%d2
	move.b %d2,_log_line
	move.w #300,-(%sp)
	and.w #255,%d1
	move.w %d1,%d0
	add.w %d1,%d0
	add.w %d0,%d0
	add.w %d1,%d0
	add.w %d0,%d0
	add.w #40,%d0
	move.w %d0,-(%sp)
	.short 0xa893
	pea -64(%fp)
	.short 0xa884
	clr.w %d0
	move.b _log_line,%d0
	moveq #20,%d2
	and.l #0xFFFF,%d0
	divu.w %d2,%d0
	move.l %d0,%d1
	swap %d1
	move.b %d1,_log_line
	lea (12,%sp),%sp
	move.l -68(%fp),%d3
	unlk %fp
	rts
	.size	_log, .-_log
	.pushsection .text._log.macsbug,"ax",@progbits
# macsbug symbol
	.byte 132
	.ascii	"_log"
	.align 2,0
	.short 0
	.popsection
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC0:
	.string	"%d"
	.section	.text._logI,"ax",@progbits
	.align	2
	.globl	_logI
	.type	_logI, @function
_logI:
	link.w %fp,#-96
	move.l %a2,-(%sp)
	move.l 8(%fp),-(%sp)
	pea .LC0
	lea (-96,%fp),%a2
	move.l %a2,-(%sp)
	jsr sprintf
	move.l %a2,-(%sp)
	jsr strlen
	move.b %d0,-64(%fp)
	move.l %d0,(%sp)
	move.l %a2,-(%sp)
	pea -63(%fp)
	jsr memcpy
	move.b _log_line,%d1
	move.b %d1,%d0
	addq.b #1,%d0
	move.b %d0,_log_line
	move.w #300,-(%sp)
	and.w #255,%d1
	move.w %d1,%d0
	add.w %d1,%d0
	add.w %d0,%d0
	add.w %d1,%d0
	add.w %d0,%d0
	add.w #40,%d0
	move.w %d0,-(%sp)
	.short 0xa893
	pea -64(%fp)
	.short 0xa884
	clr.w %d0
	move.b _log_line,%d0
	moveq #20,%d2
	and.l #0xFFFF,%d0
	divu.w %d2,%d0
	move.l %d0,%d1
	swap %d1
	move.b %d1,_log_line
	lea (24,%sp),%sp
	move.l -100(%fp),%a2
	unlk %fp
	rts
	.size	_logI, .-_logI
	.pushsection .text._logI.macsbug,"ax",@progbits
# macsbug symbol
	.byte 133
	.ascii	"_logI"
	.align 2,0
	.short 0
	.popsection
	.section	.text.getBitmapOffset,"ax",@progbits
	.align	2
	.globl	getBitmapOffset
	.type	getBitmapOffset, @function
getBitmapOffset:
	move.l 4(%sp),%a0
	move.w CHAR_DIM+2,%d1
	muls.w 23198(%a0),%d1
	move.w CHAR_DIM,%d2
	muls.w 23196(%a0),%d2
	move.l %d2,%d0
	swap %d0
	clr.w %d0
	move.w %d1,%d0
	rts
	.size	getBitmapOffset, .-getBitmapOffset
	.pushsection .text.getBitmapOffset.macsbug,"ax",@progbits
# macsbug symbol
	.byte 143
	.ascii	"getBitmapOffset"
	.align 2,0
	.short 0
	.popsection
	.section	.text.MakeNewWindow,"ax",@progbits
	.align	2
	.globl	MakeNewWindow
	.type	MakeNewWindow, @function
MakeNewWindow:
	link.w %fp,#-8
	subq.l #4,%sp
	.short 0xa924
	move.l (%sp),%a0
	move.l 24(%a0),%a0
	move.l (%a0),%a1
	move.w #2986,%a0
	move.w (%a0),%d0
	add.w %d0,%d0
	subq.w #1,%d0
	add.w 2(%a1),%d0
	move.w %d0,-8(%fp)
	move.w 4(%a1),-6(%fp)
	move.w _game+23174,%d1
	add.w #14,%d1
	move.w (%a0),%d0
	add.w %d0,%d0
	add.w %d0,%d1
	move.w %d1,-4(%fp)
	move.w _game+23176,%d0
	add.w #16,%d0
	move.w %d0,-2(%fp)
	clr.l -(%sp)
	pea -8(%fp)
	move.l 8(%fp),-(%sp)
	move.b #1,-(%sp)
	move.w 12(%fp),-(%sp)
	pea -1.w
	move.b #1,-(%sp)
	clr.l -(%sp)
	.short 0xa913
	move.l (%sp),_window
	addq.l #4,%sp
	unlk %fp
	rts
	.size	MakeNewWindow, .-MakeNewWindow
	.pushsection .text.MakeNewWindow.macsbug,"ax",@progbits
# macsbug symbol
	.byte 141
	.ascii	"MakeNewWindow"
	.align 2,0
	.short 0
	.popsection
	.section	.text.InitCustomWDEF,"ax",@progbits
	.align	2
	.globl	InitCustomWDEF
	.type	InitCustomWDEF, @function
InitCustomWDEF:
	move.l %a2,-(%sp)
	subq.l #4,%sp
	move.l #1464091974,-(%sp)
	move.w #128,-(%sp)
	.short 0xa9a0
	move.l (%sp),%a2
	addq.l #4,%sp
	move.l %a2,%a0
	.short 0xa029
	move.l (%a2),%a0
	move.l #MYWINDOWDEFPROC,6(%a0)
	move.l (%sp)+,%a2
	rts
	.size	InitCustomWDEF, .-InitCustomWDEF
	.pushsection .text.InitCustomWDEF.macsbug,"ax",@progbits
# macsbug symbol
	.byte 142
	.ascii	"InitCustomWDEF"
	.align 2,0
	.short 0
	.popsection
	.section	.rodata.str1.1
.LC1:
	.string	"vScroll"
	.section	.text.ShowAboutBox,"ax",@progbits
	.align	2
	.globl	ShowAboutBox
	.type	ShowAboutBox, @function
ShowAboutBox:
	link.w %fp,#-24
	movem.l #6192,-(%sp)
	subq.l #4,%sp
	move.w #128,-(%sp)
	clr.l -(%sp)
	pea -1.w
	.short 0xa9bd
	move.l (%sp),%a0
	move.l %a0,_aboutBoxRef
	move.l %a0,(%sp)
	move.w qd+92,%d0
	move.w %d0,%d1
	moveq #15,%d2
	lsr.w %d2,%d1
	add.w %d0,%d1
	asr.w #1,%d1
	move.w 22(%a0),%d2
	move.w %d2,%d0
	moveq #15,%d3
	lsr.w %d3,%d0
	add.w %d2,%d0
	asr.w #1,%d0
	sub.w %d0,%d1
	move.w %d1,-(%sp)
	move.w qd+90,%d0
	move.w %d0,%d1
	lsr.w %d3,%d1
	add.w %d0,%d1
	asr.w #1,%d1
	move.w 20(%a0),%d2
	move.w %d2,%d0
	lsr.w %d3,%d0
	add.w %d2,%d0
	asr.w #1,%d0
	sub.w %d0,%d1
	move.w %d1,-(%sp)
	move.b #0,-(%sp)
	.short 0xa91b
	move.l _aboutBoxRef,-(%sp)
	.short 0xa915
	move.l _aboutBoxRef,-(%sp)
	.short 0xa873
	subq.l #4,%sp
	move.l #1413830740,-(%sp)
	move.w #128,-(%sp)
	.short 0xa9a0
	move.l (%sp),%a2
	addq.l #4,%sp
	move.l %a2,%a0
	.short 0xa029
	move.l _aboutBoxRef,%a0
	move.l 16(%a0),%d0
	move.l 20(%a0),%d1
	move.l %d0,-24(%fp)
	move.l %d1,-20(%fp)
	move.w -24(%fp),-16(%fp)
	move.w -18(%fp),%d1
	move.w %d1,%d0
	add.w #-15,%d0
	move.w %d0,-14(%fp)
	move.w -20(%fp),-12(%fp)
	move.w %d1,-10(%fp)
	move.w %d0,-18(%fp)
	lea (-24,%fp),%a3
	move.l %a3,-(%sp)
	move.w #1,-(%sp)
	move.w #1,-(%sp)
	.short 0xa8a9
	move.l -24(%fp),-8(%fp)
	move.l -20(%fp),-4(%fp)
	move.w -20(%fp),%d0
	add.w %d0,%d0
	move.w %d0,-20(%fp)
	subq.l #4,%sp
	move.l %a3,-(%sp)
	move.l %fp,%d3
	subq.l #8,%d3
	move.l %d3,-(%sp)
	.short 0xa9d2
	move.l (%sp),%d4
	addq.l #4,%sp
	lea _aboutDocRecord,%a3
	move.l %d4,(%a3)
	move.l %a2,%a0
	.short 0xa025
	move.l (%a2),-(%sp)
	move.l %d0,-(%sp)
	move.l %d4,-(%sp)
	.short 0xa9cf
	clr.w -(%sp)
	move.w #-30,-(%sp)
	move.l (%a3),-(%sp)
	.short 0xa812
	move.l %d3,-(%sp)
	move.l (%a3),-(%sp)
	.short 0xa9d3
	subq.l #4,%sp
	move.l _aboutBoxRef,-(%sp)
	pea -16(%fp)
	pea .LC1
	move.b #0,-(%sp)
	clr.w -(%sp)
	clr.w -(%sp)
	clr.w -(%sp)
	move.w #16,-(%sp)
	clr.l -(%sp)
	.short 0xa954
	move.l (%sp),%d0
	move.l %d0,_aboutDocRecord+4
	move.l (%a3),%a0
	move.l (%a0),%a0
	move.w 94(%a0),%d1
	muls.w 24(%a0),%d1
	move.w %d1,-(%sp)
	.short 0xa965
	move.l _aboutDocRecord+4,-(%sp)
	.short 0xa957
	move.l %a2,-(%sp)
	.short 0xa9a3
	movem.l -40(%fp),#3096
	unlk %fp
	rts
	.size	ShowAboutBox, .-ShowAboutBox
	.pushsection .text.ShowAboutBox.macsbug,"ax",@progbits
# macsbug symbol
	.byte 140
	.ascii	"ShowAboutBox"
	.align 2,0
	.short 0
	.popsection
	.globl	__mulsi3
	.section	.rodata.str1.1
.LC2:
	.string	"DANGER TO MALLOC!"
	.section	.text.showVictoryBox,"ax",@progbits
	.align	2
	.globl	showVictoryBox
	.type	showVictoryBox, @function
showVictoryBox:
	link.w %fp,#-48
	movem.l #7992,-(%sp)
	subq.l #4,%sp
	move.w #128,-(%sp)
	clr.l -(%sp)
	pea -1.w
	.short 0xa97c
	move.l (%sp),-46(%fp)
	addq.l #4,%sp
	.short 0xa850
	move.l -46(%fp),-(%sp)
	move.w #2,-(%sp)
	pea -42(%fp)
	pea -38(%fp)
	lea (-30,%fp),%a2
	move.l %a2,-(%sp)
	.short 0xa98d
	move.l -46(%fp),-(%sp)
	move.w #2,-(%sp)
	move.w -42(%fp),-(%sp)
	pea BUTTONFRAMEPROC
	move.l %a2,-(%sp)
	.short 0xa98e
	pea -34(%fp)
	.short 0xa874
	subq.l #4,%sp
	.short 0xa924
	.short 0xa873
	move.l 8(%fp),%a0
	move.b (%a0),%d4
	moveq #0,%d0
	move.b %d4,%d0
	addq.l #7,%d0
	asr.l #3,%d0
	move.w %d0,-10(%fp)
	move.b 1(%a0),%d3
	moveq #0,%d1
	move.b %d3,%d1
	lea __mulsi3,%a2
	move.l %d0,-(%sp)
	move.l %d1,-(%sp)
	jsr (%a2)
	addq.l #8,%sp
	add.l %d0,%d0
	move.l %d0,-(%sp)
	jsr malloc
	move.l %d0,-14(%fp)
	addq.l #4,%sp
	jeq .L46
	lea (-8,%fp),%a4
	move.l %a4,-(%sp)
	clr.w -(%sp)
	clr.w -(%sp)
	and.w #255,%d4
	move.w %d4,-(%sp)
	and.w #255,%d3
	move.w %d3,-(%sp)
	.short 0xa8a7
	move.l 8(%fp),%a1
	move.b 1(%a1),%d0
	jeq .L33
	clr.b -47(%fp)
	move.w -10(%fp),%a1
.L19:
	cmp.w #0,%a1
	jle .L31
	moveq #0,%d4
	move.b -47(%fp),%d4
	clr.w %d7
	move.b -47(%fp),%d7
	move.l %d4,%d1
	lsl.l #6,%d1
	clr.b %d5
	clr.b %d3
	sub.l %a3,%a3
	move.l 8(%fp),%d6
	add.l %d1,%d6
.L29:
	move.l %d4,-(%sp)
	move.l %a1,-(%sp)
	jsr (%a2)
	addq.l #8,%sp
	move.l -14(%fp),%a0
	add.l %a3,%a0
	clr.b (%a0,%d0.l)
	move.w -10(%fp),%d0
	move.w %d0,%a1
	move.l 8(%fp),%a0
	cmp.b (%a0),%d3
	jcc .L20
	moveq #0,%d1
	move.b %d3,%d1
	move.l %d6,%a0
	add.l %d1,%a0
	tst.b 2690(%a0)
	jeq .L21
	muls.w %d7,%d0
	lea (%a3,%d0.l),%a0
	add.l -14(%fp),%a0
	add.b #-128,(%a0)
	move.w -10(%fp),%d0
	move.w %d0,%a1
.L21:
	move.b %d3,%d1
	addq.b #1,%d1
	move.l 8(%fp),%a0
	cmp.b (%a0),%d1
	jcc .L40
	and.l #255,%d1
	move.l %d6,%a0
	add.l %d1,%a0
	tst.b 2690(%a0)
	jeq .L22
	muls.w %d7,%d0
	lea (%a3,%d0.l),%a0
	add.l -14(%fp),%a0
	add.b #64,(%a0)
	move.w -10(%fp),%d0
	move.w %d0,%a1
.L22:
	move.b %d3,%d1
	addq.b #2,%d1
	move.l 8(%fp),%a0
	cmp.b (%a0),%d1
	jcc .L40
	and.l #255,%d1
	move.l %d6,%a0
	add.l %d1,%a0
	tst.b 2690(%a0)
	jeq .L23
	muls.w %d7,%d0
	lea (%a3,%d0.l),%a0
	add.l -14(%fp),%a0
	add.b #32,(%a0)
	move.w -10(%fp),%d0
	move.w %d0,%a1
.L23:
	move.b %d3,%d1
	addq.b #3,%d1
	move.l 8(%fp),%a0
	cmp.b (%a0),%d1
	jcc .L40
	and.l #255,%d1
	move.l %d6,%a0
	add.l %d1,%a0
	tst.b 2690(%a0)
	jeq .L24
	muls.w %d7,%d0
	lea (%a3,%d0.l),%a0
	add.l -14(%fp),%a0
	add.b #16,(%a0)
	move.w -10(%fp),%d0
	move.w %d0,%a1
.L24:
	move.b %d3,%d1
	addq.b #4,%d1
	move.l 8(%fp),%a0
	cmp.b (%a0),%d1
	jcc .L40
	and.l #255,%d1
	move.l %d6,%a0
	add.l %d1,%a0
	tst.b 2690(%a0)
	jeq .L25
	muls.w %d7,%d0
	lea (%a3,%d0.l),%a0
	add.l -14(%fp),%a0
	addq.b #8,(%a0)
	move.w -10(%fp),%d0
	move.w %d0,%a1
.L25:
	move.b %d3,%d1
	addq.b #5,%d1
	move.l 8(%fp),%a0
	cmp.b (%a0),%d1
	jcc .L40
	and.l #255,%d1
	move.l %d6,%a0
	add.l %d1,%a0
	tst.b 2690(%a0)
	jeq .L26
	muls.w %d7,%d0
	lea (%a3,%d0.l),%a0
	add.l -14(%fp),%a0
	addq.b #4,(%a0)
	move.w -10(%fp),%d0
	move.w %d0,%a1
.L26:
	move.b %d3,%d1
	addq.b #6,%d1
	move.l 8(%fp),%a0
	cmp.b (%a0),%d1
	jcc .L40
	and.l #255,%d1
	move.l %d6,%a0
	add.l %d1,%a0
	tst.b 2690(%a0)
	jeq .L27
	muls.w %d7,%d0
	lea (%a3,%d0.l),%a0
	add.l -14(%fp),%a0
	addq.b #2,(%a0)
	move.w -10(%fp),%d0
	move.w %d0,%a1
.L27:
	move.b %d3,%d1
	addq.b #7,%d1
	move.l 8(%fp),%a0
	cmp.b (%a0),%d1
	jcc .L40
	and.l #255,%d1
	move.l %d6,%a0
	add.l %d1,%a0
	tst.b 2690(%a0)
	jeq .L28
	muls.w %d7,%d0
	lea (%a3,%d0.l),%a0
	add.l -14(%fp),%a0
	addq.b #1,(%a0)
	move.w -10(%fp),%a1
.L28:
	addq.b #8,%d3
.L20:
	addq.b #1,%d5
	moveq #0,%d0
	move.b %d5,%d0
	move.l %d0,%a3
	cmp.l %a3,%a1
	jgt .L29
.L47:
	move.l 8(%fp),%a0
	move.b 1(%a0),%d0
.L31:
	addq.b #1,-47(%fp)
	cmp.b -47(%fp),%d0
	jhi .L19
	and.w #255,%d0
	add.w %d0,%d0
	add.w #30,%d0
	move.l -46(%fp),%a2
	move.w 18(%a2),%a1
	move.w 22(%a2),%a0
	sub.w %a1,%a0
	move.l %a0,%d1
	jpl .L48
	addq.l #1,%d1
.L48:
	asr.l #1,%d1
	move.w %a1,%a0
	add.w %d1,%a0
	move.l 8(%fp),%a1
	move.b (%a1),%d1
	lsr.b #1,%d1
	and.w #255,%d1
	add.w %d1,%d1
	move.w #30,-22(%fp)
	move.w %a0,%a2
	sub.w %d1,%a2
	move.w %a2,-20(%fp)
	move.w %d0,-18(%fp)
	add.w %d1,%a0
	move.w %a0,-16(%fp)
	subq.l #4,%sp
	.short 0xa924
	move.l (%sp),%a0
	lea (-14,%fp),%a1
	move.l %a1,(%sp)
	pea 2(%a0)
	move.l %a4,-(%sp)
	pea -22(%fp)
	clr.w -(%sp)
	clr.l -(%sp)
	.short 0xa8ec
	move.l -34(%fp),-(%sp)
	.short 0xa873
	lea (-40,%fp),%a2
.L32:
	clr.l -(%sp)
	move.l %a2,-(%sp)
	.short 0xa991
	cmp.w #1,-40(%fp)
	jne .L32
	move.l -14(%fp),-(%sp)
	jsr free
	move.w #-1,-(%sp)
	move.w #-1,-(%sp)
	.short 0x201f, 0xa032
	move.l -46(%fp),-(%sp)
	.short 0xa983
	addq.l #4,%sp
	movem.l -80(%fp),#7416
	unlk %fp
	rts
.L40:
	move.b %d1,%d3
	addq.b #1,%d5
	moveq #0,%d0
	move.b %d5,%d0
	move.l %d0,%a3
	cmp.l %a3,%a1
	jgt .L29
	jra .L47
.L33:
	moveq #30,%d0
	move.l -46(%fp),%a2
	move.w 18(%a2),%a1
	move.w 22(%a2),%a0
	sub.w %a1,%a0
	move.l %a0,%d1
	jpl .L49
	addq.l #1,%d1
.L49:
	asr.l #1,%d1
	move.w %a1,%a0
	add.w %d1,%a0
	move.l 8(%fp),%a1
	move.b (%a1),%d1
	lsr.b #1,%d1
	and.w #255,%d1
	add.w %d1,%d1
	move.w #30,-22(%fp)
	move.w %a0,%a2
	sub.w %d1,%a2
	move.w %a2,-20(%fp)
	move.w %d0,-18(%fp)
	add.w %d1,%a0
	move.w %a0,-16(%fp)
	subq.l #4,%sp
	.short 0xa924
	move.l (%sp),%a0
	lea (-14,%fp),%a1
	move.l %a1,(%sp)
	pea 2(%a0)
	move.l %a4,-(%sp)
	pea -22(%fp)
	clr.w -(%sp)
	clr.l -(%sp)
	.short 0xa8ec
	move.l -34(%fp),-(%sp)
	.short 0xa873
	lea (-40,%fp),%a2
	jra .L32
.L46:
	pea .LC2
	jsr _log
	addq.l #4,%sp
	movem.l -80(%fp),#7416
	unlk %fp
	rts
	.size	showVictoryBox, .-showVictoryBox
	.pushsection .text.showVictoryBox.macsbug,"ax",@progbits
# macsbug symbol
	.byte 142
	.ascii	"showVictoryBox"
	.align 2,0
	.short 0
	.popsection
	.section	.text.UpdateMenus,"ax",@progbits
	.align	2
	.globl	UpdateMenus
	.type	UpdateMenus, @function
UpdateMenus:
	move.l %d3,-(%sp)
	subq.l #4,%sp
	move.w #129,-(%sp)
	.short 0xa9bf
	move.l (%sp),%d3
	.short 0xa924
	move.l (%sp),%d0
	addq.l #4,%sp
	jeq .L51
	move.l %d3,-(%sp)
	move.w #4,-(%sp)
	.short 0xa939
	move.l %d3,-(%sp)
	move.w #5,-(%sp)
	.short 0xa939
	move.l %d3,-(%sp)
	move.w #2,-(%sp)
	.short 0xa939
	subq.l #4,%sp
	move.w #129,-(%sp)
	.short 0xa9bf
	addq.l #4,%sp
	move.l (%sp)+,%d3
	rts
.L51:
	move.l %d3,-(%sp)
	move.w #4,-(%sp)
	.short 0xa93a
	move.l %d3,-(%sp)
	move.w #5,-(%sp)
	.short 0xa93a
	move.l %d3,-(%sp)
	move.w #2,-(%sp)
	.short 0xa93a
	subq.l #4,%sp
	move.w #129,-(%sp)
	.short 0xa9bf
	addq.l #4,%sp
	move.l (%sp)+,%d3
	rts
	.size	UpdateMenus, .-UpdateMenus
	.pushsection .text.UpdateMenus.macsbug,"ax",@progbits
# macsbug symbol
	.byte 139
	.ascii	"UpdateMenus"
	.align 2,0
	.short 0
	.popsection
	.section	.text.loadGame,"ax",@progbits
	.align	2
	.globl	loadGame
	.type	loadGame, @function
loadGame:
	lea (-16,%sp),%sp
	movem.l #7994,-(%sp)
	move.l 60(%sp),%a6
	move.l 56(%sp),%a0
	move.b (%a0),%d3
	move.b %d3,(%a6)
	move.b 1(%a0),46(%sp)
	move.b 46(%sp),1(%a6)
	move.b #14,23178(%a6)
	pea 16.w
	pea 514(%a0)
	pea 23180(%a6)
	jsr strncpy
	clr.w 23198(%a6)
	clr.w 23196(%a6)
	move.b _game+1,59(%sp)
	lea (12,%sp),%sp
	tst.b 47(%sp)
	jeq .L66
	lea (2,%a6),%a3
	move.l %a6,%d0
	add.l #6786,%d0
	moveq #0,%d6
	moveq #0,%d5
	clr.w 44(%sp)
	lea (2690,%a6),%a0
	move.l %a0,48(%sp)
	moveq #127,%d4
	not.b %d4
	move.l %a6,40(%sp)
	move.l %d6,%a6
	move.l %d0,%d6
.L65:
	clr.b (%a3)
	tst.b %d3
	jeq .L59
	move.l 48(%sp),%a1
	add.l %a6,%a1
	move.l %d6,%a0
	clr.b %d0
	clr.b %d2
	move.l %d5,%d1
	lsl.l #3,%d1
	move.l %d1,%a2
	add.l 56(%sp),%a2
	move.l %d5,%d1
	add.l %d5,%d1
	add.l %d5,%d1
	move.l %d1,%d7
	lsl.l #3,%d7
	sub.l %d1,%d7
	move.l 40(%sp),%a4
	add.l %d7,%a4
	move.l %d5,36(%sp)
.L62:
	move.b %d0,%d7
	lsr.b #3,%d7
	and.l #255,%d7
	moveq #7,%d1
	and.l %d0,%d1
	move.l %d4,%d5
	asr.l %d1,%d5
	move.l %d5,%d1
	and.b 2(%a2,%d7.l),%d1
	sne %d7
	neg.b %d7
	move.b %d7,(%a1)+
	tst.b %d1
	jeq .L60
	addq.b #1,%d2
.L61:
	moveq #2,%d1
	move.l %d1,(%a0)+
	addq.b #1,%d0
	cmp.b %d3,%d0
	jne .L62
.L97:
	move.l 36(%sp),%d5
	tst.b %d2
	jeq .L93
	move.b (%a3),%d1
	move.b %d1,%d0
	addq.b #1,%d0
	move.b %d0,(%a3)
	and.l #255,%d1
	move.l %d5,%d7
	add.l %d5,%d7
	add.l %d5,%d7
	move.l %d7,%d0
	lsl.l #3,%d0
	sub.l %d7,%d0
	move.l 40(%sp),%a0
	add.l %d0,%a0
	move.b %d2,3(%a0,%d1.l)
.L93:
	move.b (%a3),%d0
	moveq #0,%d1
	move.b %d0,%d1
	move.w 44(%sp),%a0
	cmp.l %a0,%d1
	jle .L59
	and.w #255,%d0
	move.w %d0,44(%sp)
	move.l 40(%sp),%a0
	move.w %d0,23198(%a0)
.L59:
	addq.l #1,%d5
	lea (21,%a3),%a3
	add.l #256,%d6
	lea (64,%a6),%a6
	cmp.b 47(%sp),%d5
	jcs .L65
	move.l 40(%sp),%a6
.L66:
	tst.b %d3
	jeq .L58
	lea (1346,%a6),%a2
	move.b 46(%sp),%d0
	subq.b #1,%d0
	and.l #255,%d0
	lsl.l #6,%d0
	lea (2754,%a6),%a1
	add.l %d0,%a1
	moveq #0,%d5
	clr.w %d7
	lea (2690,%a6),%a3
.L72:
	clr.b (%a2)
	tst.b 46(%sp)
	jeq .L67
	lea (%a3,%d5.l),%a0
	clr.b %d4
	clr.b %d1
	moveq #0,%d0
	move.l %d5,%d2
	add.l %d5,%d2
	add.l %d5,%d2
	move.l %d2,%d6
	lsl.l #3,%d6
	sub.l %d2,%d6
	add.l %a6,%d6
.L70:
	move.l %d0,%d2
	tst.b (%a0)
	jeq .L68
	addq.b #1,%d1
.L69:
	lea (64,%a0),%a0
	cmp.l %a1,%a0
	jne .L70
.L96:
	tst.b %d1
	jeq .L71
	addq.b #1,%d4
	move.b %d4,(%a2)
	move.l %d5,%d2
	add.l %d5,%d2
	add.l %d5,%d2
	move.l %d2,%d4
	lsl.l #3,%d4
	move.l %d4,%a0
	sub.l %d2,%a0
	lea (%a6,%a0.l),%a0
	add.l %d0,%a0
	move.b %d1,1347(%a0)
	move.b (%a2),%d4
	moveq #0,%d2
	move.b %d4,%d2
.L71:
	move.w %d7,%a0
	cmp.l %a0,%d2
	jle .L67
	clr.w %d7
	move.b %d4,%d7
	move.w %d7,23196(%a6)
.L67:
	addq.l #1,%d5
	lea (21,%a2),%a2
	addq.l #1,%a1
	cmp.b %d3,%d5
	jcs .L72
.L58:
	subq.l #4,%sp
	.short 0xa924
	move.l (%sp),%a0
	addq.l #4,%sp
	move.l 24(%a0),%a0
	move.l (%a0),%a0
	move.w CHAR_DIM,%d2
	muls.w 23196(%a6),%d2
	move.w CHAR_DIM+2,%d0
	muls.w 23198(%a6),%d0
	move.w 4(%a0),%d1
	add.w %d0,%d1
	move.w %d1,23172(%a6)
	move.w 2(%a0),%d5
	add.w %d2,%d5
	move.w %d5,23170(%a6)
	clr.w %d3
	move.b 23178(%a6),%d3
	clr.w %d1
	move.b (%a6),%d1
	muls.w %d3,%d1
	add.w %d0,%d1
	add.w 4(%a0),%d1
	move.w %d1,23176(%a6)
	clr.w %d0
	move.b 1(%a6),%d0
	muls.w %d3,%d0
	add.w %d2,%d0
	add.w 2(%a0),%d0
	move.w %d0,23174(%a6)
	movem.l (%sp)+,#23800
	lea (16,%sp),%sp
	rts
.L68:
	tst.b %d1
	jeq .L69
	addq.b #1,%d4
	move.b %d4,(%a2)
	move.l %d6,%a4
	add.l %d0,%a4
	move.b %d1,1347(%a4)
	move.b (%a2),%d4
	moveq #0,%d0
	move.b %d4,%d0
	move.l %d0,%d2
	clr.b %d1
	lea (64,%a0),%a0
	cmp.l %a1,%a0
	jne .L70
	jra .L96
.L60:
	tst.b %d2
	jeq .L61
	move.b (%a3),%d1
	move.b %d1,%d5
	addq.b #1,%d5
	move.b %d5,(%a3)
	and.l #255,%d1
	move.b %d2,3(%a4,%d1.l)
	clr.b %d2
	moveq #2,%d1
	move.l %d1,(%a0)+
	addq.b #1,%d0
	cmp.b %d3,%d0
	jne .L62
	jra .L97
	.size	loadGame, .-loadGame
	.pushsection .text.loadGame.macsbug,"ax",@progbits
# macsbug symbol
	rts
	.byte 136
	.ascii	"loadGame"
	.align 2,0
	.short 0
	.popsection
	.section	.text.DoMenuCommand,"ax",@progbits
	.align	2
	.globl	DoMenuCommand
	.type	DoMenuCommand, @function
DoMenuCommand:
	link.w %fp,#-272
	move.l %a2,-(%sp)
	move.l %d3,-(%sp)
	move.l 8(%fp),%d3
	move.l %d3,%d2
	swap %d2
	ext.l %d2
	cmp.l #128,%d2
	jeq .L122
	cmp.l #129,%d2
	jeq .L123
.L101:
	clr.w -(%sp)
	.short 0xa938
	move.l -280(%fp),%d3
	move.l -276(%fp),%a2
	unlk %fp
	rts
.L123:
	cmp.w #7,%d3
	jhi .L101
	moveq #0,%d0
	move.w %d3,%d0
	add.l %d0,%d0
	move.w .L104(%pc,%d0.l),%d0
	jmp %pc@(2,%d0:w)
	.balignw 2,0x284c
	.swbeg	&8
.L104:
	.word .L101-.L104
	.word .L108-.L104
	.word .L107-.L104
	.word .L101-.L104
	.word .L106-.L104
	.word .L105-.L104
	.word .L101-.L104
	.word .L103-.L104
.L122:
	cmp.w #1,%d3
	jeq .L124
	subq.l #4,%sp
	move.w #129,-(%sp)
	.short 0xa9bf
	move.w %d3,-(%sp)
	move.l %fp,%d3
	add.l #-256,%d3
	move.l %d3,-(%sp)
	.short 0xa946
	subq.l #2,%sp
	move.l %d3,-(%sp)
	.short 0xa9b6
	addq.l #2,%sp
	clr.w -(%sp)
	.short 0xa938
	move.l -280(%fp),%d3
	move.l -276(%fp),%a2
	unlk %fp
	rts
.L124:
	jsr ShowAboutBox
	clr.w -(%sp)
	.short 0xa938
	move.l -280(%fp),%d3
	move.l -276(%fp),%a2
	unlk %fp
	rts
.L103:
	.short 0xa9f4
	clr.w -(%sp)
	.short 0xa938
	move.l -280(%fp),%d3
	move.l -276(%fp),%a2
	unlk %fp
	rts
.L105:
	lea _game+2690,%a0
	lea _game+6786,%a1
	move.l %a1,%d1
.L112:
	moveq #0,%d0
	move.b (%a0)+,%d0
	move.l %d0,(%a1)+
	cmp.l %a0,%d1
	jne .L112
.L113:
	pea _game+23170
	.short 0xa928
	clr.w -(%sp)
	.short 0xa938
	move.l -280(%fp),%d3
	move.l -276(%fp),%a2
	unlk %fp
	rts
.L106:
	lea _game+6786,%a0
	move.l #_game+23170,%d0
.L111:
	moveq #2,%d1
	move.l %d1,(%a0)+
	cmp.l %a0,%d0
	jeq .L113
	moveq #2,%d1
	move.l %d1,(%a0)+
	cmp.l %a0,%d0
	jne .L111
	jra .L113
.L107:
	subq.l #4,%sp
	.short 0xa924
	move.l (%sp),%a0
	addq.l #4,%sp
	cmp.w #0,%a0
	jeq .L101
	move.w 108(%a0),%d0
	jlt .L125
	subq.l #4,%sp
	.short 0xa924
	.short 0xa914
	subq.l #4,%sp
	move.w #129,-(%sp)
	.short 0xa9bf
	move.w #1,-(%sp)
	.short 0xa939
	clr.w -(%sp)
	.short 0xa938
	move.l -280(%fp),%d3
	move.l -276(%fp),%a2
	unlk %fp
	rts
.L108:
	pea _game
	pea _pak
	jsr loadGame
	pea _game+23180
	jsr strlen
	move.b %d0,-272(%fp)
	lea (-272,%fp),%a2
	move.l %d0,(%sp)
	pea _game+23180
	pea 1(%a2)
	jsr memcpy
	subq.l #4,%sp
	.short 0xa924
	move.l (%sp),%a0
	move.l 24(%a0),%a0
	move.l (%a0),%a1
	move.w #2986,%a0
	move.w (%a0),%d0
	add.w %d0,%d0
	subq.w #1,%d0
	add.w 2(%a1),%d0
	move.w %d0,-256(%fp)
	move.w 4(%a1),-254(%fp)
	move.w _game+23174,%d1
	add.w #14,%d1
	move.w (%a0),%d0
	add.w %d0,%d0
	add.w %d0,%d1
	move.w %d1,-252(%fp)
	move.w _game+23176,%d0
	add.w #16,%d0
	move.w %d0,-250(%fp)
	clr.l -(%sp)
	pea -256(%fp)
	move.l %a2,-(%sp)
	move.b #1,-(%sp)
	clr.w -(%sp)
	pea -1.w
	move.b #1,-(%sp)
	clr.l -(%sp)
	.short 0xa913
	move.l (%sp),_window
	move.w #129,-(%sp)
	.short 0xa9bf
	move.w #1,-(%sp)
	.short 0xa93a
	lea (20,%sp),%sp
	clr.w -(%sp)
	.short 0xa938
	move.l -280(%fp),%d3
	move.l -276(%fp),%a2
	unlk %fp
	rts
.L125:
	move.w %d0,-(%sp)
	.short 0xa9b7
	clr.w -(%sp)
	.short 0xa938
	move.l -280(%fp),%d3
	move.l -276(%fp),%a2
	unlk %fp
	rts
	.size	DoMenuCommand, .-DoMenuCommand
	.pushsection .text.DoMenuCommand.macsbug,"ax",@progbits
# macsbug symbol
	.byte 141
	.ascii	"DoMenuCommand"
	.align 2,0
	.short 0
	.popsection
	.section	.text.drawHints,"ax",@progbits
	.align	2
	.globl	drawHints
	.type	drawHints, @function
drawHints:
	lea (-32,%sp),%sp
	movem.l #7994,-(%sp)
	move.l 72(%sp),%a2
	move.w CHAR_DIM,%d0
	muls.w 23196(%a2),%d0
	move.w %d0,46(%sp)
	move.w CHAR_DIM+2,%d5
	muls.w 23198(%a2),%d5
	lea (52,%sp),%a3
	move.l %a3,-(%sp)
	clr.w -(%sp)
	move.w %d0,-(%sp)
	move.w %d5,-(%sp)
	clr.w %d0
	move.b 1(%a2),%d0
	clr.w %d1
	move.b 23178(%a2),%d1
	muls.w %d1,%d0
	add.w 56(%sp),%d0
	move.w %d0,-(%sp)
	.short 0xa8a7
	move.l %a3,-(%sp)
	.short 0xa8a1
	move.l %a3,-(%sp)
	move.w %d5,-(%sp)
	clr.w -(%sp)
	clr.w %d0
	move.b (%a2),%d0
	clr.w %d1
	move.b 23178(%a2),%d1
	muls.w %d1,%d0
	add.w %d5,%d0
	move.w %d0,-(%sp)
	move.w 56(%sp),-(%sp)
	.short 0xa8a7
	move.l %a3,-(%sp)
	.short 0xa8a1
	tst.b 1(%a2)
	jeq .L128
	clr.b %d6
	lea (60,%sp),%a0
	move.l %a0,42(%sp)
	move.w 46(%sp),%d7
	subq.w #2,%d7
	lea (49,%sp),%a6
	move.w %d5,40(%sp)
.L127:
	moveq #0,%d1
	move.b %d6,%d1
	move.l %d1,%d0
	addq.l #1,%d0
	move.l %d0,36(%sp)
	move.w %d0,%d5
	move.l %d1,%d0
	add.l %d1,%d0
	add.l %d1,%d0
	move.l %d0,%d1
	lsl.l #3,%d1
	move.l %d1,%a3
	sub.l %d0,%a3
	lea (%a2,%a3.l),%a3
	lea (2,%a3),%a4
	tst.b (%a4)
	jeq .L133
	clr.b %d3
	clr.b %d4
.L131:
	clr.w %d0
	move.b %d4,%d0
	move.w %d0,-(%sp)
	clr.w %d0
	move.b 23178(%a2),%d0
	muls.w %d5,%d0
	add.w %d7,%d0
	move.w %d0,-(%sp)
	.short 0xa893
	moveq #0,%d0
	move.b %d3,%d0
	move.b 3(%a3,%d0.l),%d0
	cmp.b #9,%d0
	jhi .L129
	move.b #1,49(%sp)
	add.b #48,%d0
	move.b %d0,50(%sp)
	add.b CHAR_DIM+3,%d4
.L130:
	move.l %a6,-(%sp)
	.short 0xa884
	addq.b #1,%d3
	cmp.b (%a4),%d3
	jcs .L131
.L133:
	clr.w %d0
	move.b 23178(%a2),%d0
	muls.w 38(%sp),%d0
	add.w 46(%sp),%d0
	move.l 42(%sp),-(%sp)
	clr.w -(%sp)
	move.w %d0,%a0
	subq.w #1,%a0
	move.w %a0,-(%sp)
	move.w 48(%sp),-(%sp)
	move.w %d0,-(%sp)
	.short 0xa8a7
	move.l 42(%sp),-(%sp)
	.short 0xa8a1
	addq.b #1,%d6
	cmp.b 1(%a2),%d6
	jcs .L127
	move.w 40(%sp),%d5
.L128:
	tst.b (%a2)
	jeq .L126
	clr.b 40(%sp)
	lea (60,%sp),%a0
	move.l %a0,42(%sp)
	lea CHAR_DIM,%a4
	lea (49,%sp),%a6
.L134:
	move.w (%a4),%d4
	moveq #0,%d0
	move.b 40(%sp),%d0
	move.l %d0,36(%sp)
	add.l %d0,%d0
	add.l 36(%sp),%d0
	move.l %d0,%d6
	lsl.l #3,%d6
	sub.l %d0,%d6
	add.l %a2,%d6
	move.l %d6,%a3
	lea (1346,%a3),%a3
	tst.b (%a3)
	jeq .L140
	clr.w %d7
	move.b 40(%sp),%d7
	clr.b %d3
.L139:
	clr.w %d0
	move.b 23178(%a2),%d0
	muls.w %d7,%d0
	add.w %d5,%d0
	move.w %d0,-(%sp)
	clr.w %d0
	move.b %d4,%d0
	subq.w #2,%d0
	move.w %d0,-(%sp)
	.short 0xa893
	moveq #0,%d0
	move.b %d3,%d0
	move.l %d6,%a0
	add.l %d0,%a0
	move.b 1347(%a0),%d0
	cmp.b #9,%d0
	jhi .L137
	move.b #1,49(%sp)
	add.b #48,%d0
	move.b %d0,50(%sp)
	add.b 1(%a4),%d4
.L138:
	move.l %a6,-(%sp)
	.short 0xa884
	addq.b #1,%d3
	cmp.b (%a3),%d3
	jcs .L139
.L140:
	move.l 36(%sp),%d1
	addq.l #1,%d1
	clr.w %d0
	move.b 23178(%a2),%d0
	muls.w %d1,%d0
	add.w %d5,%d0
	move.l 42(%sp),-(%sp)
	move.w %d0,%d1
	subq.w #1,%d1
	move.w %d1,-(%sp)
	clr.w -(%sp)
	move.w %d0,-(%sp)
	move.w 56(%sp),-(%sp)
	.short 0xa8a7
	move.l 42(%sp),-(%sp)
	.short 0xa8a1
	addq.b #1,40(%sp)
	move.b 40(%sp),%d0
	cmp.b (%a2),%d0
	jcs .L134
.L126:
	movem.l (%sp)+,#23800
	lea (32,%sp),%sp
	rts
.L137:
	cmp.b #99,%d0
	jhi .L138
	move.b #2,49(%sp)
	and.w #255,%d0
	move.w %d0,%d2
	mulu.w #52429,%d2
	clr.w %d2
	swap %d2
	lsr.w #3,%d2
	move.b %d2,%d1
	add.b #48,%d1
	move.b %d1,50(%sp)
	move.w %d2,%d1
	add.w %d2,%d1
	add.w %d1,%d1
	add.w %d2,%d1
	add.w %d1,%d1
	sub.w %d1,%d0
	add.b #48,%d0
	move.b %d0,51(%sp)
	move.b 1(%a4),%d0
	add.b %d0,%d0
	add.b %d0,%d4
	move.l %a6,-(%sp)
	.short 0xa884
	addq.b #1,%d3
	cmp.b (%a3),%d3
	jcs .L139
	jra .L140
.L129:
	cmp.b #99,%d0
	jhi .L130
	move.b #2,49(%sp)
	and.w #255,%d0
	move.w %d0,%d2
	mulu.w #52429,%d2
	clr.w %d2
	swap %d2
	lsr.w #3,%d2
	move.b %d2,%d1
	add.b #48,%d1
	move.b %d1,50(%sp)
	move.w %d2,%d1
	add.w %d2,%d1
	add.w %d1,%d1
	add.w %d2,%d1
	add.w %d1,%d1
	sub.w %d1,%d0
	add.b #48,%d0
	move.b %d0,51(%sp)
	move.b CHAR_DIM+3,%d0
	add.b %d0,%d0
	add.b %d0,%d4
	move.l %a6,-(%sp)
	.short 0xa884
	addq.b #1,%d3
	cmp.b (%a4),%d3
	jcs .L131
	jra .L133
	.size	drawHints, .-drawHints
	.pushsection .text.drawHints.macsbug,"ax",@progbits
# macsbug symbol
	rts
	.byte 137
	.ascii	"drawHints"
	.align 2,0
	.short 0
	.popsection
	.section	.text.drawPlayfield,"ax",@progbits
	.align	2
	.globl	drawPlayfield
	.type	drawPlayfield, @function
drawPlayfield:
	lea (-48,%sp),%sp
	movem.l #7994,-(%sp)
	move.w CHAR_DIM,%d0
	move.l 92(%sp),%a0
	muls.w 23196(%a0),%d0
	move.w %d0,62(%sp)
	move.w CHAR_DIM+2,%d0
	muls.w 23198(%a0),%d0
	move.w %d0,46(%sp)
	tst.b 90(%sp)
	jeq .L163
	tst.b 88(%sp)
	jeq .L163
	lea (6786,%a0),%a0
	move.l %a0,58(%sp)
	move.b 90(%sp),%d0
	subq.b #1,%d0
	and.l #255,%d0
	move.l %d0,64(%sp)
	clr.l 54(%sp)
	move.b 88(%sp),%d0
	subq.b #1,%d0
	lea qd+178,%a6
	and.l #255,%d0
	move.l %d0,50(%sp)
	move.l 92(%sp),%a0
	clr.w %d3
	move.b 23178(%a0),%d3
	move.w %d3,%d0
	muls.w 56(%sp),%d0
	move.w 62(%sp),%a2
	add.w %d0,%a2
	move.w 56(%sp),%d7
	addq.w #1,%d7
	muls.w %d3,%d7
	add.w 62(%sp),%d7
	clr.w %d0
	move.b 57(%sp),%d0
	moveq #5,%d2
	and.l #0xFFFF,%d0
	divu.w %d2,%d0
	move.l %d0,%d1
	swap %d1
	move.b %d1,49(%sp)
	move.w %d7,%a4
	subq.w #1,%a4
	move.l 58(%sp),%a3
	moveq #0,%d4
	move.w %d7,36(%sp)
	move.w %d3,%d1
.L162:
	move.w %d1,%d0
	muls.w %d4,%d0
	add.w 46(%sp),%d0
	move.w %d4,%d3
	addq.w #1,%d3
	muls.w %d1,%d3
	add.w 46(%sp),%d3
	move.l (%a6),76(%sp)
	move.l qd+182,80(%sp)
	move.l (%a3)+,%d1
	move.w %d3,%d6
	subq.w #1,%d6
	clr.w %d2
	move.b %d4,%d2
	move.w %d2,%d5
	moveq #5,%d7
	and.l #0xFFFF,%d5
	divu.w %d7,%d5
	move.l %d5,%d2
	swap %d2
	move.b %d2,%d5
	tst.l %d1
	jne .L151
.L204:
	lea qd+194,%a0
	move.l (%a0),76(%sp)
	move.l qd+198,80(%sp)
	pea 68(%sp)
	move.w %d0,-(%sp)
	move.w %a2,-(%sp)
	move.w %d6,-(%sp)
	move.w %a4,-(%sp)
	move.l %d0,50(%sp)
	.short 0xa8a7
	pea 68(%sp)
	pea 80(%sp)
	.short 0xa8a5
	pea 68(%sp)
	move.l 42(%sp),%d0
	move.w %d0,-(%sp)
	move.w %a4,-(%sp)
	move.w %d3,-(%sp)
	move.w 46(%sp),-(%sp)
	.short 0xa8a7
	cmp.b #4,49(%sp)
	jeq .L202
	pea 68(%sp)
	move.l %a6,-(%sp)
	.short 0xa8a5
	pea 68(%sp)
	move.w %d6,-(%sp)
	move.w %a2,-(%sp)
	move.w %d3,-(%sp)
	move.w 46(%sp),-(%sp)
	.short 0xa8a7
	cmp.b #4,%d5
	jeq .L159
.L166:
	move.l %a6,%d0
.L158:
	pea 68(%sp)
	move.l %d0,-(%sp)
	.short 0xa8a5
	cmp.l 50(%sp),%d4
	jeq .L203
.L160:
	addq.l #1,%d4
	move.l 92(%sp),%a0
	clr.w %d1
	move.b 23178(%a0),%d1
	move.w %d1,%d0
	muls.w %d4,%d0
	add.w 46(%sp),%d0
	move.w %d4,%d3
	addq.w #1,%d3
	muls.w %d1,%d3
	add.w 46(%sp),%d3
	move.l (%a6),76(%sp)
	move.l qd+182,80(%sp)
	move.l (%a3)+,%d1
	move.w %d3,%d6
	subq.w #1,%d6
	clr.w %d2
	move.b %d4,%d2
	move.w %d2,%d5
	moveq #5,%d7
	and.l #0xFFFF,%d5
	divu.w %d7,%d5
	move.l %d5,%d2
	swap %d2
	move.b %d2,%d5
	tst.l %d1
	jeq .L204
.L151:
	moveq #1,%d2
	cmp.l %d1,%d2
	jeq .L205
	pea 68(%sp)
	move.w %d0,-(%sp)
	move.w %a2,-(%sp)
	move.w %d6,-(%sp)
	move.w %a4,-(%sp)
	move.l %d0,50(%sp)
	move.l %d1,54(%sp)
	.short 0xa8a7
	pea 68(%sp)
	pea 80(%sp)
	.short 0xa8a5
	pea 68(%sp)
	move.l 42(%sp),%d0
	move.w %d0,-(%sp)
	move.w %a4,-(%sp)
	move.w %d3,-(%sp)
	move.w 46(%sp),-(%sp)
	.short 0xa8a7
	move.l 42(%sp),%d1
	cmp.b #4,49(%sp)
	jeq .L206
	subq.l #2,%d1
	jne .L156
	pea 68(%sp)
	pea qd+186
	.short 0xa8a5
	pea 68(%sp)
	move.w %d6,-(%sp)
	move.w %a2,-(%sp)
	move.w %d3,-(%sp)
	move.w 46(%sp),-(%sp)
	.short 0xa8a7
	cmp.b #4,%d5
	jeq .L164
.L159:
	move.l #qd+186,%d0
.L207:
	pea 68(%sp)
	move.l %d0,-(%sp)
	.short 0xa8a5
	cmp.l 50(%sp),%d4
	jne .L160
.L203:
	move.l 54(%sp),%d0
	addq.l #1,%d0
	add.l #256,58(%sp)
	move.l 64(%sp),%d5
	cmp.l 54(%sp),%d5
	jeq .L163
	move.l %d0,54(%sp)
	move.l 92(%sp),%a0
	clr.w %d3
	move.b 23178(%a0),%d3
	move.w %d3,%d0
	muls.w 56(%sp),%d0
	move.w 62(%sp),%a2
	add.w %d0,%a2
	move.w 56(%sp),%d7
	addq.w #1,%d7
	muls.w %d3,%d7
	add.w 62(%sp),%d7
	clr.w %d0
	move.b 57(%sp),%d0
	moveq #5,%d2
	and.l #0xFFFF,%d0
	divu.w %d2,%d0
	move.l %d0,%d1
	swap %d1
	move.b %d1,49(%sp)
	move.w %d7,%a4
	subq.w #1,%a4
	move.l 58(%sp),%a3
	moveq #0,%d4
	move.w %d7,36(%sp)
	move.w %d3,%d1
	jra .L162
.L202:
	pea 68(%sp)
	pea qd+186
	.short 0xa8a5
	pea 68(%sp)
	move.w %d6,-(%sp)
	move.w %a2,-(%sp)
	move.w %d3,-(%sp)
	move.w 46(%sp),-(%sp)
	.short 0xa8a7
	cmp.b #4,%d5
	jne .L166
	move.l #qd+186,%d0
	jra .L207
.L205:
	lea qd+186,%a0
	move.l (%a0),76(%sp)
	move.l qd+190,80(%sp)
	pea 68(%sp)
	move.w %d0,-(%sp)
	move.w %a2,-(%sp)
	move.w %d6,-(%sp)
	move.w %a4,-(%sp)
	move.l %d0,50(%sp)
	.short 0xa8a7
	pea 68(%sp)
	pea 80(%sp)
	.short 0xa8a5
	pea 68(%sp)
	move.l 42(%sp),%d0
	move.w %d0,-(%sp)
	move.w %a4,-(%sp)
	move.w %d3,-(%sp)
	move.w 46(%sp),-(%sp)
	.short 0xa8a7
	cmp.b #4,49(%sp)
	jne .L156
	pea 68(%sp)
	pea qd+194
	.short 0xa8a5
	pea 68(%sp)
	move.w %d6,-(%sp)
	move.w %a2,-(%sp)
	move.w %d3,-(%sp)
	move.w 46(%sp),-(%sp)
	.short 0xa8a7
	cmp.b #4,%d5
	jne .L166
.L164:
	move.l #qd+194,%d0
	jra .L158
.L156:
	pea 68(%sp)
	pea qd+178
	.short 0xa8a5
	pea 68(%sp)
	move.w %d6,-(%sp)
	move.w %a2,-(%sp)
	move.w %d3,-(%sp)
	move.w 46(%sp),-(%sp)
	.short 0xa8a7
	cmp.b #4,%d5
	jeq .L164
	move.l %a6,%d0
	jra .L158
.L206:
	pea 68(%sp)
	pea qd+194
	move.l %d1,50(%sp)
	.short 0xa8a5
	pea 68(%sp)
	move.w %d6,-(%sp)
	move.w %a2,-(%sp)
	move.w %d3,-(%sp)
	move.w 46(%sp),-(%sp)
	.short 0xa8a7
	move.l 42(%sp),%d1
	cmp.b #4,%d5
	jeq .L164
	subq.l #2,%d1
	jeq .L159
	move.l %a6,%d0
	jra .L158
.L163:
	move.l 92(%sp),%a0
	pea 23170(%a0)
	.short 0xa8a1
	movem.l (%sp)+,#23800
	lea (48,%sp),%sp
	rts
	.size	drawPlayfield, .-drawPlayfield
	.pushsection .text.drawPlayfield.macsbug,"ax",@progbits
# macsbug symbol
	.byte 141
	.ascii	"drawPlayfield"
	.align 2,0
	.short 0
	.popsection
	.section	.text.drawGame,"ax",@progbits
	.align	2
	.globl	drawGame
	.type	drawGame, @function
drawGame:
	pea _game
	jsr drawHints
	pea _game
	move.b _game+1,-(%sp)
	move.b _game,-(%sp)
	jsr drawPlayfield
	lea (12,%sp),%sp
	rts
	.size	drawGame, .-drawGame
	.pushsection .text.drawGame.macsbug,"ax",@progbits
# macsbug symbol
	.byte 136
	.ascii	"drawGame"
	.align 2,0
	.short 0
	.popsection
	.section	.text.DoUpdate,"ax",@progbits
	.align	2
	.globl	DoUpdate
	.type	DoUpdate, @function
DoUpdate:
	move.l %d3,-(%sp)
	move.l 8(%sp),%d3
	move.l %d3,-(%sp)
	.short 0xa873
	move.l %d3,-(%sp)
	.short 0xa922
	cmp.l _aboutBoxRef.l,%d3
	jeq .L211
	pea _game
	jsr drawHints
	pea _game
	move.b _game+1,-(%sp)
	move.b _game,-(%sp)
	jsr drawPlayfield
	lea (12,%sp),%sp
.L211:
	move.l %d3,-(%sp)
	.short 0xa923
	move.l (%sp)+,%d3
	rts
	.size	DoUpdate, .-DoUpdate
	.pushsection .text.DoUpdate.macsbug,"ax",@progbits
# macsbug symbol
	.byte 136
	.ascii	"DoUpdate"
	.align 2,0
	.short 0
	.popsection
	.globl	__divsi3
	.section	.text.getBitAtPoint,"ax",@progbits
	.align	2
	.globl	getBitAtPoint
	.type	getBitAtPoint, @function
getBitAtPoint:
	movem.l #6192,-(%sp)
	move.l 20(%sp),%a3
	moveq #0,%d4
	move.b _game+23178,%d4
	move.w 2(%a3),%a0
	move.w CHAR_DIM+2,%d0
	muls.w _game+23198,%d0
	lea __divsi3,%a2
	move.l %d4,-(%sp)
	sub.w %d0,%a0
	move.l %a0,-(%sp)
	jsr (%a2)
	addq.l #8,%sp
	move.l %d0,%d3
	move.w (%a3),%a0
	move.w CHAR_DIM,%d0
	muls.w _game+23196,%d0
	move.l %d4,-(%sp)
	sub.w %d0,%a0
	move.l %a0,-(%sp)
	jsr (%a2)
	addq.l #8,%sp
	swap %d0
	clr.w %d0
	move.w %d3,%d0
	movem.l (%sp)+,#3096
	rts
	.size	getBitAtPoint, .-getBitAtPoint
	.pushsection .text.getBitAtPoint.macsbug,"ax",@progbits
# macsbug symbol
	.byte 141
	.ascii	"getBitAtPoint"
	.align 2,0
	.short 0
	.popsection
	.section	.text.checkForUltimateVictory,"ax",@progbits
	.align	2
	.globl	checkForUltimateVictory
	.type	checkForUltimateVictory, @function
checkForUltimateVictory:
	movem.l #6200,-(%sp)
	move.l 24(%sp),%a3
	move.b 1(%a3),%d0
	jeq .L217
	move.b (%a3),%d2
	move.b %d2,%d1
	subq.b #1,%d1
	and.l #255,%d1
	lea (2691,%a3),%a2
	add.l %d1,%a2
	move.l %a3,%d1
	add.l #6786,%d1
	subq.b #1,%d0
	and.l #255,%d0
	lsl.l #8,%d0
	lea (7042,%a3),%a0
	add.l %a0,%d0
	sub.l %a4,%a4
	move.l %a3,%d3
	add.l #2690,%d3
.L218:
	tst.b %d2
	jeq .L223
	lea (%a4,%d3.l),%a0
	move.l %d1,%a1
.L221:
	moveq #1,%d4
	cmp.l (%a1)+,%d4
	jeq .L219
	tst.b (%a0)
	jne .L216
.L219:
	addq.l #1,%a0
	cmp.l %a0,%a2
	jne .L221
.L223:
	lea (64,%a2),%a2
	add.l #256,%d1
	lea (64,%a4),%a4
	cmp.l %d1,%d0
	jne .L218
.L217:
	move.l %a3,24(%sp)
	movem.l (%sp)+,#7192
	jra showVictoryBox
.L216:
	movem.l (%sp)+,#7192
	rts
	.size	checkForUltimateVictory, .-checkForUltimateVictory
	.pushsection .text.checkForUltimateVictory.macsbug,"ax",@progbits
# macsbug symbol
	.byte 151
	.ascii	"checkForUltimateVictory"
	.align 2,0
	.short 0
	.popsection
	.section	.text.toggleBit,"ax",@progbits
	.align	2
	.globl	toggleBit
	.type	toggleBit, @function
toggleBit:
	link.w %fp,#-44
	movem.l #7992,-(%sp)
	move.w CHAR_DIM+2,%d5
	muls.w _game+23198,%d5
	move.b _game+23178,%d4
	moveq #0,%d0
	move.b %d4,%d0
	move.l %d0,%a2
	move.l 8(%fp),%a1
	move.w 2(%a1),%a0
	lea __divsi3,%a4
	move.l %a2,-(%sp)
	sub.w %d5,%a0
	move.l %a0,-(%sp)
	jsr (%a4)
	addq.l #8,%sp
	move.l %d0,%d3
	move.w %d0,%d6
	jlt .L234
	move.w %d0,%d1
	ext.l %d1
	move.b _game,%d7
	moveq #0,%d0
	move.b %d7,%d0
	cmp.l %d1,%d0
	jle .L234
	move.w CHAR_DIM,%d0
	muls.w _game+23196,%d0
	move.w %d0,%a3
	move.l 8(%fp),%a1
	move.w (%a1),%a0
	move.l %a2,-(%sp)
	sub.w %d0,%a0
	move.l %a0,-(%sp)
	move.l %d1,-28(%fp)
	jsr (%a4)
	addq.l #8,%sp
	move.w %d0,-38(%fp)
	move.l -28(%fp),%d1
	tst.w %d0
	jlt .L234
	move.w %d0,%a2
	move.b _game+1,%d2
	move.w %d2,%a4
	and.l #255,%d2
	cmp.l %a2,%d2
	jle .L234
	moveq #0,%d2
	move.w %d0,%d2
	move.l %d2,-20(%fp)
	move.l %d0,%d2
	swap %d2
	clr.w %d2
	move.l %d2,%a1
	move.w %d3,%d2
	move.l 12(%fp),%a0
	cmp.l (%a0),%d2
	jeq .L300
	move.l %a2,%d2
	lsl.l #6,%d2
	add.l %d1,%d2
	lsl.l #2,%d2
	move.l %d2,%d1
	add.l #_game+6786,%d1
	move.l %d1,%a1
	move.l (%a1),%a0
	subq.l #1,%a0
	moveq #2,%d2
	cmp.l %a0,%d2
	jcs .L238
	move.l %a0,(%a1)
.L239:
	move.w %a4,%d1
	tst.b %d1
	jeq .L240
	move.b %d7,%d2
	subq.b #1,%d2
	and.l #255,%d2
	move.l %d2,%a1
	add.l #_game+2691,%a1
	lea _game+6786,%a0
	subq.b #1,%d1
	move.b %d1,%d2
	move.b %d1,%d2
	and.l #255,%d2
	move.l %d2,%a4
	addq.l #1,%a4
	move.l %a4,%d1
	lsl.l #6,%d1
	move.l %d1,-24(%fp)
	clr.l -36(%fp)
	move.w %d5,-40(%fp)
	move.w -38(%fp),%d1
	move.l %a0,%d2
.L241:
	tst.b %d7
	jeq .L246
	move.l -36(%fp),%a0
	add.l #_game+2690,%a0
	move.l %d2,%a4
	move.w -40(%fp),%d5
	move.l %d2,-44(%fp)
.L244:
	moveq #1,%d2
	cmp.l (%a4)+,%d2
	jeq .L242
	tst.b (%a0)
	jne .L293
.L242:
	addq.l #1,%a0
	cmp.l %a1,%a0
	jne .L244
	move.w %d5,-40(%fp)
	move.l -44(%fp),%d2
.L246:
	lea (64,%a1),%a1
	add.l #256,%d2
	moveq #64,%d5
	add.l %d5,-36(%fp)
	move.l -24(%fp),%d5
	cmp.l -36(%fp),%d5
	jne .L241
	move.w %d1,-38(%fp)
.L240:
	pea _game
	move.l %d0,-32(%fp)
	jsr showVictoryBox
	move.b _game+23178,%d4
	move.w CHAR_DIM,%d1
	muls.w _game+23196,%d1
	move.w %d1,%a3
	move.w CHAR_DIM+2,%d5
	muls.w _game+23198,%d5
	addq.l #4,%sp
	move.l -32(%fp),%d0
.L243:
	clr.w %d2
	move.b %d4,%d2
	move.w %d2,%d7
	muls.w %d0,%d7
	add.w %a3,%d7
	move.l %a2,%d4
	addq.l #1,%d4
	muls.w %d2,%d4
	add.w %d4,%a3
	move.w -38(%fp),%d4
	moveq #5,%d1
	ext.l %d4
	divs.w %d1,%d4
	move.l %d4,%d1
	swap %d1
	move.w %d1,-36(%fp)
	clr.w %d1
	move.b %d3,%d1
	move.w %d1,%d4
	muls.w %d2,%d4
	move.w %d4,%a1
	add.w %d5,%a1
	move.w %a1,-24(%fp)
	moveq #0,%d4
	not.b %d4
	and.l %d4,%d3
	move.l %d3,%a0
	addq.l #1,%a0
	move.w %a0,%d4
	muls.w %d4,%d2
	add.w %d2,%d5
	lea qd+178,%a0
	move.l (%a0),-8(%fp)
	move.l qd+182,-4(%fp)
	moveq #0,%d2
	not.b %d2
	and.l %d2,%d0
	lsl.l #6,%d0
	add.l %d3,%d0
	lsl.l #2,%d0
	add.l #_game+6786,%d0
	move.l %d0,%a2
	move.l (%a2),%a1
	move.w %a3,%d0
	subq.w #1,%d0
	move.w %d5,%a4
	subq.w #1,%a4
	moveq #5,%d2
	and.l #0xFFFF,%d1
	divu.w %d2,%d1
	move.l %d1,%d3
	swap %d3
	cmp.w #0,%a1
	jne .L247
	move.l qd+194,-8(%fp)
	move.l qd+198,-4(%fp)
	lea (-16,%fp),%a2
	move.l %a2,-(%sp)
	move.w -24(%fp),-(%sp)
	move.w %d7,-(%sp)
	move.w %a4,-(%sp)
	move.w %d0,-(%sp)
	move.l %d0,-32(%fp)
	move.l %a0,-28(%fp)
	.short 0xa8a7
	move.l %a2,-(%sp)
	pea -8(%fp)
	.short 0xa8a5
	move.l %a2,-(%sp)
	move.w -24(%fp),-(%sp)
	move.l -32(%fp),%d0
	move.w %d0,-(%sp)
	move.w %d5,-(%sp)
	move.w %a3,-(%sp)
	.short 0xa8a7
	move.l -28(%fp),%a0
	cmp.w #4,-36(%fp)
	jeq .L301
	move.l %a2,-(%sp)
	move.l %a0,-(%sp)
	.short 0xa8a5
	move.l %a2,-(%sp)
	move.w %a4,-(%sp)
	move.w %d7,-(%sp)
	move.w %d5,-(%sp)
	move.w %a3,-(%sp)
	.short 0xa8a7
	cmp.b #4,%d3
	jeq .L255
.L258:
	move.l #qd+178,%d0
.L254:
	move.l %a2,-(%sp)
	move.l %d0,-(%sp)
	.short 0xa8a5
	move.l -20(%fp),%d0
	swap %d0
	clr.w %d0
	move.w %d6,%d0
.L289:
	movem.l -76(%fp),#7416
	unlk %fp
	rts
.L234:
	moveq #-1,%d0
	movem.l -76(%fp),#7416
	unlk %fp
	rts
.L293:
	move.w %d1,-38(%fp)
	jra .L243
.L238:
	moveq #2,%d2
	move.l %d2,(%a1)
	jra .L239
.L247:
	moveq #1,%d4
	cmp.l %a1,%d4
	jeq .L302
	lea (-16,%fp),%a2
	move.l %a2,-(%sp)
	move.w -24(%fp),-(%sp)
	move.w %d7,-(%sp)
	move.w %a4,-(%sp)
	move.w %d0,-(%sp)
	move.l %d0,-32(%fp)
	move.l %a1,-28(%fp)
	.short 0xa8a7
	move.l %a2,-(%sp)
	pea -8(%fp)
	.short 0xa8a5
	move.l %a2,-(%sp)
	move.w -24(%fp),-(%sp)
	move.l -32(%fp),%d0
	move.w %d0,-(%sp)
	move.w %d5,-(%sp)
	move.w %a3,-(%sp)
	.short 0xa8a7
	move.l -28(%fp),%a1
	cmp.w #4,-36(%fp)
	jeq .L303
	moveq #2,%d0
	cmp.l %a1,%d0
	jne .L252
	move.l %a2,-(%sp)
	pea qd+186
	.short 0xa8a5
	move.l %a2,-(%sp)
	move.w %a4,-(%sp)
	move.w %d7,-(%sp)
	move.w %d5,-(%sp)
	move.w %a3,-(%sp)
	.short 0xa8a7
	cmp.b #4,%d3
	jeq .L256
.L255:
	move.l #qd+186,%d0
.L305:
	move.l %a2,-(%sp)
	move.l %d0,-(%sp)
	.short 0xa8a5
	move.l -20(%fp),%d0
	swap %d0
	clr.w %d0
	move.w %d6,%d0
	jra .L289
.L300:
	move.l %a1,%d0
	move.w %d3,%d0
	movem.l -76(%fp),#7416
	unlk %fp
	rts
.L303:
	move.l %a2,-(%sp)
	pea qd+194
	move.l %a1,-28(%fp)
	.short 0xa8a5
	move.l %a2,-(%sp)
	move.w %a4,-(%sp)
	move.w %d7,-(%sp)
	move.w %d5,-(%sp)
	move.w %a3,-(%sp)
	.short 0xa8a7
	move.l -28(%fp),%a1
	cmp.b #4,%d3
	jne .L304
.L256:
	move.l #qd+194,%d0
.L307:
	move.l %a2,-(%sp)
	move.l %d0,-(%sp)
	.short 0xa8a5
	move.l -20(%fp),%d0
	swap %d0
	clr.w %d0
	move.w %d6,%d0
	jra .L289
.L301:
	move.l %a2,-(%sp)
	pea qd+186
	.short 0xa8a5
	move.l %a2,-(%sp)
	move.w %a4,-(%sp)
	move.w %d7,-(%sp)
	move.w %d5,-(%sp)
	move.w %a3,-(%sp)
	.short 0xa8a7
	cmp.b #4,%d3
	jne .L258
	move.l #qd+186,%d0
	jra .L305
.L302:
	move.l qd+186,-8(%fp)
	move.l qd+190,-4(%fp)
	lea (-16,%fp),%a2
	move.l %a2,-(%sp)
	move.w -24(%fp),-(%sp)
	move.w %d7,-(%sp)
	move.w %a4,-(%sp)
	move.w %d0,-(%sp)
	move.l %d0,-32(%fp)
	.short 0xa8a7
	move.l %a2,-(%sp)
	pea -8(%fp)
	.short 0xa8a5
	move.l %a2,-(%sp)
	move.w -24(%fp),-(%sp)
	move.l -32(%fp),%d0
	move.w %d0,-(%sp)
	move.w %d5,-(%sp)
	move.w %a3,-(%sp)
	.short 0xa8a7
	cmp.w #4,-36(%fp)
	jeq .L306
.L252:
	move.l %a2,-(%sp)
	pea qd+178
	.short 0xa8a5
	move.l %a2,-(%sp)
	move.w %a4,-(%sp)
	move.w %d7,-(%sp)
	move.w %d5,-(%sp)
	move.w %a3,-(%sp)
	.short 0xa8a7
	cmp.b #4,%d3
	jeq .L256
	move.l #qd+178,%d0
	jra .L254
.L306:
	move.l %a2,-(%sp)
	pea qd+194
	.short 0xa8a5
	move.l %a2,-(%sp)
	move.w %a4,-(%sp)
	move.w %d7,-(%sp)
	move.w %d5,-(%sp)
	move.w %a3,-(%sp)
	.short 0xa8a7
	cmp.b #4,%d3
	jne .L258
	move.l #qd+194,%d0
	jra .L307
.L304:
	moveq #2,%d1
	cmp.l %a1,%d1
	jeq .L255
	move.l #qd+178,%d0
	jra .L254
	.size	toggleBit, .-toggleBit
	.pushsection .text.toggleBit.macsbug,"ax",@progbits
# macsbug symbol
	rts
	.byte 137
	.ascii	"toggleBit"
	.align 2,0
	.short 0
	.popsection
	.section	.rodata.str1.1
.LC3:
	.string	"\004x%dx"
	.section	.text.ScrollAboutText,"ax",@progbits
	.align	2
	.globl	ScrollAboutText
	.type	ScrollAboutText, @function
ScrollAboutText:
	link.w %fp,#-20
	move.l %a2,-(%sp)
	move.w 12(%fp),%d0
	jeq .L308
	move.w %d0,%d1
	and.w #-3,%d1
	cmp.w #21,%d1
	jeq .L312
	cmp.w #20,%d1
	jeq .L321
	cmp.w #129,%d0
	jeq .L312
	move.l #757935405,-10(%fp)
	move.l #757935405,-6(%fp)
	move.w #11520,-2(%fp)
	move.w %d0,%a0
	move.l %a0,-(%sp)
	pea .LC3
	lea (-10,%fp),%a2
	move.l %a2,-(%sp)
	jsr sprintf
	move.l %a2,-(%sp)
	pea 10.w
	lea _aboutDocRecord,%a2
	move.l (%a2),-(%sp)
	.short 0xa9cf
	clr.w -18(%fp)
	move.w #300,-16(%fp)
	move.w #300,-14(%fp)
	move.w #300,-12(%fp)
	pea -18(%fp)
	move.l (%a2),-(%sp)
	.short 0xa9d3
	lea (12,%sp),%sp
.L308:
	move.l -24(%fp),%a2
	unlk %fp
	rts
.L312:
	clr.w -(%sp)
	move.w #-10,-(%sp)
	move.l _aboutDocRecord,-(%sp)
	.short 0xa812
	move.l -24(%fp),%a2
	unlk %fp
	rts
.L321:
	clr.w -(%sp)
	move.w #10,-(%sp)
	move.l _aboutDocRecord,-(%sp)
	.short 0xa812
	move.l -24(%fp),%a2
	unlk %fp
	rts
	.size	ScrollAboutText, .-ScrollAboutText
	.pushsection .text.ScrollAboutText.macsbug,"ax",@progbits
# macsbug symbol
	.byte 143
	.ascii	"ScrollAboutText"
	.align 2,0
	.short 0
	.popsection
	.section	.text.startup.main,"ax",@progbits
	.align	2
	.globl	main
	.type	main, @function
main:
	lea (-64,%sp),%sp
	movem.l #7994,-(%sp)
	pea qd+202
	.short 0xa86e
	.short 0xa8fe
	.short 0xa912
	.short 0xa930
	.short 0xa9cc
	clr.l -(%sp)
	.short 0xa97b
	subq.l #4,%sp
	move.w #128,-(%sp)
	.short 0xa9c0
	.short 0xa93c
	subq.l #4,%sp
	move.w #128,-(%sp)
	.short 0xa9bf
	move.l #1146246738,-(%sp)
	.short 0xa94d
	.short 0xa937
	jsr InitCustomWDEF
	.short 0xa850
	move.w #-2,64(%sp)
	move.w #-2,66(%sp)
	lea (68,%sp),%a6
.L363:
	.short 0xa9b4
	subq.l #2,%sp
	move.w #-1,-(%sp)
	pea 88(%sp)
	.short 0xa970
	move.b (%sp),%d0
	addq.l #2,%sp
	jeq .L363
	move.w 84(%sp),%d0
	cmp.w #3,%d0
	jeq .L325
	jgt .L326
	cmp.w #1,%d0
	jeq .L327
	cmp.w #2,%d0
	jne .L363
	move.w #-2,66(%sp)
	move.w #-2,64(%sp)
	jra .L363
.L326:
	cmp.w #6,%d0
	jne .L363
	move.l 86(%sp),58(%sp)
	move.l 58(%sp),-(%sp)
	.short 0xa873
	move.l 58(%sp),-(%sp)
	.short 0xa922
	move.l 58(%sp),%d0
	cmp.l _aboutBoxRef.l,%d0
	jeq .L347
	pea _game
	jsr drawHints
	move.b _game+1,67(%sp)
	lea _game,%a0
	move.b (%a0),66(%sp)
	move.w CHAR_DIM,%d0
	muls.w _game+23196,%d0
	move.w %d0,60(%sp)
	move.w CHAR_DIM+2,%d1
	muls.w _game+23198,%d1
	move.w %d1,54(%sp)
	addq.l #4,%sp
	tst.b 63(%sp)
	jeq .L362
	tst.b 62(%sp)
	jeq .L362
	move.l #_game+6786,52(%sp)
	clr.l 46(%sp)
.L360:
	clr.w %d3
	move.b _game+23178,%d3
	move.w %d3,%d6
	muls.w 48(%sp),%d6
	add.w 56(%sp),%d6
	move.w 48(%sp),%d4
	addq.w #1,%d4
	muls.w %d3,%d4
	add.w 56(%sp),%d4
	clr.w %d0
	move.b 49(%sp),%d0
	moveq #5,%d2
	and.l #0xFFFF,%d0
	divu.w %d2,%d0
	move.l %d0,%d1
	swap %d1
	move.b %d1,41(%sp)
	move.w %d4,%a4
	subq.w #1,%a4
	move.l 52(%sp),42(%sp)
	sub.l %a2,%a2
	move.w %d4,%a3
	move.l %a2,%d1
	move.w %d6,%a2
	move.w %d3,%d0
	move.l %d1,%d6
	move.w %d0,%d5
	muls.w %d6,%d5
	add.w 50(%sp),%d5
	move.w %d6,%d3
	addq.w #1,%d3
	muls.w %d0,%d3
	add.w 50(%sp),%d3
	lea qd+178,%a0
	move.l (%a0),76(%sp)
	move.l qd+182,80(%sp)
	move.l 42(%sp),%a1
	addq.l #4,42(%sp)
	move.l (%a1)+,%d0
	move.w %d3,%d7
	subq.w #1,%d7
	clr.w %d4
	move.b %d6,%d4
	moveq #5,%d2
	and.l #0xFFFF,%d4
	divu.w %d2,%d4
	move.l %d4,%d1
	swap %d1
	move.b %d1,%d4
	tst.l %d0
	jne .L350
.L409:
	lea qd+194,%a0
	move.l (%a0),76(%sp)
	move.l qd+198,80(%sp)
	move.l %a6,-(%sp)
	move.w %d5,-(%sp)
	move.w %a2,-(%sp)
	move.w %d7,-(%sp)
	move.w %a4,-(%sp)
	.short 0xa8a7
	move.l %a6,-(%sp)
	pea 80(%sp)
	.short 0xa8a5
	move.l %a6,-(%sp)
	move.w %d5,-(%sp)
	move.w %a4,-(%sp)
	move.w %d3,-(%sp)
	move.w %a3,-(%sp)
	.short 0xa8a7
	cmp.b #4,41(%sp)
	jeq .L407
	move.l %a6,-(%sp)
	pea qd+178
	.short 0xa8a5
	move.l %a6,-(%sp)
	move.w %d7,-(%sp)
	move.w %a2,-(%sp)
	move.w %d3,-(%sp)
	move.w %a3,-(%sp)
	.short 0xa8a7
	cmp.b #4,%d4
	jeq .L358
.L366:
	move.l #qd+178,%d0
.L357:
	move.l %a6,-(%sp)
	move.l %d0,-(%sp)
	.short 0xa8a5
	addq.l #1,%d6
	cmp.b 62(%sp),%d6
	jcc .L408
.L359:
	clr.w %d0
	move.b _game+23178,%d0
	move.w %d0,%d5
	muls.w %d6,%d5
	add.w 50(%sp),%d5
	move.w %d6,%d3
	addq.w #1,%d3
	muls.w %d0,%d3
	add.w 50(%sp),%d3
	lea qd+178,%a0
	move.l (%a0),76(%sp)
	move.l qd+182,80(%sp)
	move.l 42(%sp),%a1
	addq.l #4,42(%sp)
	move.l (%a1)+,%d0
	move.w %d3,%d7
	subq.w #1,%d7
	clr.w %d4
	move.b %d6,%d4
	moveq #5,%d2
	and.l #0xFFFF,%d4
	divu.w %d2,%d4
	move.l %d4,%d1
	swap %d1
	move.b %d1,%d4
	tst.l %d0
	jeq .L409
.L350:
	moveq #1,%d1
	cmp.l %d0,%d1
	jeq .L410
	move.l %a6,-(%sp)
	move.w %d5,-(%sp)
	move.w %a2,-(%sp)
	move.w %d7,-(%sp)
	move.w %a4,-(%sp)
	move.l %d0,48(%sp)
	.short 0xa8a7
	move.l %a6,-(%sp)
	pea 80(%sp)
	.short 0xa8a5
	move.l %a6,-(%sp)
	move.w %d5,-(%sp)
	move.w %a4,-(%sp)
	move.w %d3,-(%sp)
	move.w %a3,-(%sp)
	.short 0xa8a7
	move.l 36(%sp),%d0
	cmp.b #4,41(%sp)
	jeq .L411
	subq.l #2,%d0
	jne .L355
	move.l %a6,-(%sp)
	pea qd+186
	.short 0xa8a5
	move.l %a6,-(%sp)
	move.w %d7,-(%sp)
	move.w %a2,-(%sp)
	move.w %d3,-(%sp)
	move.w %a3,-(%sp)
	.short 0xa8a7
	cmp.b #4,%d4
	jeq .L364
.L358:
	move.l #qd+186,%d0
.L412:
	move.l %a6,-(%sp)
	move.l %d0,-(%sp)
	.short 0xa8a5
	addq.l #1,%d6
	cmp.b 62(%sp),%d6
	jcs .L359
.L408:
	addq.l #1,46(%sp)
	add.l #256,52(%sp)
	move.b 63(%sp),%d0
	cmp.b 49(%sp),%d0
	jhi .L360
.L362:
	pea _game+23170
	.short 0xa8a1
.L347:
	move.l 58(%sp),-(%sp)
	.short 0xa923
	cmp.w #-2,66(%sp)
	jeq .L363
	pea 94(%sp)
	.short 0xa871
	pea 64(%sp)
	pea 98(%sp)
	jsr toggleBit
	move.l %d0,72(%sp)
	addq.l #8,%sp
	jra .L363
.L407:
	move.l %a6,-(%sp)
	pea qd+186
	.short 0xa8a5
	move.l %a6,-(%sp)
	move.w %d7,-(%sp)
	move.w %a2,-(%sp)
	move.w %d3,-(%sp)
	move.w %a3,-(%sp)
	.short 0xa8a7
	cmp.b #4,%d4
	jne .L366
	move.l #qd+186,%d0
	jra .L412
.L410:
	lea qd+186,%a0
	move.l (%a0),76(%sp)
	move.l qd+190,80(%sp)
	move.l %a6,-(%sp)
	move.w %d5,-(%sp)
	move.w %a2,-(%sp)
	move.w %d7,-(%sp)
	move.w %a4,-(%sp)
	.short 0xa8a7
	move.l %a6,-(%sp)
	pea 80(%sp)
	.short 0xa8a5
	move.l %a6,-(%sp)
	move.w %d5,-(%sp)
	move.w %a4,-(%sp)
	move.w %d3,-(%sp)
	move.w %a3,-(%sp)
	.short 0xa8a7
	cmp.b #4,41(%sp)
	jne .L355
	move.l %a6,-(%sp)
	pea qd+194
	.short 0xa8a5
	move.l %a6,-(%sp)
	move.w %d7,-(%sp)
	move.w %a2,-(%sp)
	move.w %d3,-(%sp)
	move.w %a3,-(%sp)
	.short 0xa8a7
	cmp.b #4,%d4
	jne .L366
.L364:
	move.l #qd+194,%d0
	jra .L357
.L355:
	move.l %a6,-(%sp)
	pea qd+178
	.short 0xa8a5
	move.l %a6,-(%sp)
	move.w %d7,-(%sp)
	move.w %a2,-(%sp)
	move.w %d3,-(%sp)
	move.w %a3,-(%sp)
	.short 0xa8a7
	cmp.b #4,%d4
	jeq .L364
	move.l #qd+178,%d0
	jra .L357
.L411:
	move.l %a6,-(%sp)
	pea qd+194
	move.l %d0,44(%sp)
	.short 0xa8a5
	move.l %a6,-(%sp)
	move.w %d7,-(%sp)
	move.w %a2,-(%sp)
	move.w %d3,-(%sp)
	move.w %a3,-(%sp)
	.short 0xa8a7
	move.l 36(%sp),%d0
	cmp.b #4,%d4
	jeq .L364
	subq.l #2,%d0
	jeq .L358
	move.l #qd+178,%d0
	jra .L357
.L325:
	btst #0,98(%sp)
	jeq .L363
	subq.l #4,%sp
	move.w #129,-(%sp)
	.short 0xa9bf
	move.l (%sp),%d3
	.short 0xa924
	move.l (%sp),%d0
	addq.l #4,%sp
	jeq .L332
	move.l %d3,-(%sp)
	move.w #4,-(%sp)
	.short 0xa939
	move.l %d3,-(%sp)
	move.w #5,-(%sp)
	.short 0xa939
	move.l %d3,-(%sp)
	move.w #2,-(%sp)
	.short 0xa939
	subq.l #4,%sp
	move.w #129,-(%sp)
	.short 0xa9bf
	clr.w %d0
	move.b 93(%sp),%d0
	move.w %d0,-(%sp)
	.short 0xa93e
	jsr DoMenuCommand
	addq.l #4,%sp
	jra .L363
.L327:
	subq.l #2,%sp
	move.l 96(%sp),-(%sp)
	move.l %a6,-(%sp)
	.short 0xa92c
	move.w (%sp),%d0
	addq.l #2,%sp
	cmp.w #6,%d0
	jhi .L363
	and.l #65535,%d0
	add.l %d0,%d0
	move.w .L335(%pc,%d0.l),%d0
	jmp %pc@(2,%d0:w)
	.balignw 2,0x284c
	.swbeg	&7
.L335:
	.word .L363-.L335
	.word .L339-.L335
	.word .L338-.L335
	.word .L337-.L335
	.word .L336-.L335
	.word .L363-.L335
	.word .L334-.L335
.L334:
	subq.l #2,%sp
	move.l 70(%sp),-(%sp)
	move.l 100(%sp),-(%sp)
	.short 0xa91e
	move.b (%sp),%d0
	addq.l #2,%sp
	jeq .L363
	move.l 68(%sp),-(%sp)
	.short 0xa914
	move.l 68(%sp),%d0
	cmp.l _aboutBoxRef.l,%d0
	jeq .L363
	subq.l #4,%sp
	move.w #129,-(%sp)
	.short 0xa9bf
	move.w #1,-(%sp)
	.short 0xa939
	jra .L363
.L336:
	move.l 68(%sp),-(%sp)
	move.l 98(%sp),-(%sp)
	pea qd+86
	.short 0xa925
	jra .L363
.L337:
	move.l 68(%sp),-(%sp)
	.short 0xa91f
	pea 94(%sp)
	.short 0xa871
	move.l _aboutBoxRef,%d0
	cmp.l 68(%sp),%d0
	jeq .L342
	pea 64(%sp)
	pea 98(%sp)
	jsr toggleBit
	move.l %d0,72(%sp)
	move.l 76(%sp),%d0
	addq.l #8,%sp
.L342:
	subq.l #2,%sp
	move.l 96(%sp),-(%sp)
	move.l %d0,-(%sp)
	pea 86(%sp)
	.short 0xa96c
	move.w (%sp),%d0
	addq.l #2,%sp
	cmp.w #129,%d0
	jeq .L413
	cmp.w #20,%d0
	jeq .L414
	cmp.w #21,%d0
	jeq .L415
	cmp.w #22,%d0
	jeq .L416
	cmp.w #23,%d0
	jne .L363
	clr.w -(%sp)
	move.w #-100,-(%sp)
	lea _aboutDocRecord,%a1
	move.l (%a1),-(%sp)
	.short 0xa812
	jra .L363
.L338:
	pea 84(%sp)
	move.l 72(%sp),-(%sp)
	.short 0xa9b3
	jra .L363
.L339:
	subq.l #4,%sp
	move.w #129,-(%sp)
	.short 0xa9bf
	move.l (%sp),%d3
	.short 0xa924
	move.l (%sp),%d0
	addq.l #4,%sp
	jeq .L340
	move.l %d3,-(%sp)
	move.w #4,-(%sp)
	.short 0xa939
	move.l %d3,-(%sp)
	move.w #5,-(%sp)
	.short 0xa939
	move.l %d3,-(%sp)
	move.w #2,-(%sp)
	.short 0xa939
	subq.l #4,%sp
	move.w #129,-(%sp)
	.short 0xa9bf
	move.l 98(%sp),-(%sp)
	.short 0xa93d
	jsr DoMenuCommand
	addq.l #4,%sp
	jra .L363
.L332:
	move.l %d3,-(%sp)
	move.w #4,-(%sp)
	.short 0xa93a
	move.l %d3,-(%sp)
	move.w #5,-(%sp)
	.short 0xa93a
	move.l %d3,-(%sp)
	move.w #2,-(%sp)
	.short 0xa93a
	subq.l #4,%sp
	move.w #129,-(%sp)
	.short 0xa9bf
	clr.w %d0
	move.b 93(%sp),%d0
	move.w %d0,-(%sp)
	.short 0xa93e
	jsr DoMenuCommand
	addq.l #4,%sp
	jra .L363
.L340:
	move.l %d3,-(%sp)
	move.w #4,-(%sp)
	.short 0xa93a
	move.l %d3,-(%sp)
	move.w #5,-(%sp)
	.short 0xa93a
	move.l %d3,-(%sp)
	move.w #2,-(%sp)
	.short 0xa93a
	subq.l #4,%sp
	move.w #129,-(%sp)
	.short 0xa9bf
	move.l 98(%sp),-(%sp)
	.short 0xa93d
	jsr DoMenuCommand
	addq.l #4,%sp
	jra .L363
.L413:
	subq.l #2,%sp
	move.l 78(%sp),-(%sp)
	.short 0xa960
	move.w (%sp),%d3
	move.l 78(%sp),-(%sp)
	move.l 100(%sp),-(%sp)
	clr.l -(%sp)
	.short 0xa968
	move.w (%sp),%d0
	lea _aboutDocRecord,%a1
	move.l (%a1),%a0
	clr.w (%sp)
	move.l (%a0),%a1
	sub.w %d0,%d3
	muls.w 24(%a1),%d3
	move.w %d3,-(%sp)
	move.l %a0,-(%sp)
	.short 0xa812
	jra .L363
.L414:
	clr.w -(%sp)
	move.w #10,-(%sp)
	lea _aboutDocRecord,%a0
	move.l (%a0),-(%sp)
	.short 0xa812
	jra .L363
.L415:
	clr.w -(%sp)
	move.w #-10,-(%sp)
	lea _aboutDocRecord,%a1
	move.l (%a1),-(%sp)
	.short 0xa812
	jra .L363
.L416:
	clr.w -(%sp)
	move.w #100,-(%sp)
	lea _aboutDocRecord,%a0
	move.l (%a0),-(%sp)
	.short 0xa812
	jra .L363
	.size	main, .-main
	.pushsection .text.main.macsbug,"ax",@progbits
# macsbug symbol
	rts
	.byte 132
	.ascii	"main"
	.align 2,0
	.short 0
	.popsection
	.globl	_pak
	.data
	.type	_pak, @object
	.size	_pak, 530
_pak:
	.byte	30
	.byte	10
	.string	""
	.string	"\b"
	.string	"\334"
	.string	""
	.string	""
	.string	""
	.string	"\b\030"
	.string	"\034"
	.string	""
	.string	""
	.string	""
	.string	"\234\fp\f"
	.string	""
	.string	""
	.string	""
	.string	"\210\002p "
	.string	""
	.string	""
	.string	""
	.string	"\310\2011D"
	.string	""
	.string	""
	.string	""
	.string	"\234\374\377\004"
	.string	""
	.string	""
	.string	""
	.string	"\210\037\370"
	.string	""
	.string	""
	.string	""
	.string	""
	.string	"\377\360\017\374"
	.string	""
	.string	""
	.string	""
	.string	"\034\016\036\030"
	.string	""
	.string	""
	.string	""
	.string	"\37089\304"
	.string	""
	.string	""
	.string	""
	.string	""
	.zero	431
	.string	"Medium"
	.zero	9
	.globl	CHAR_DIM
	.align	2
	.type	CHAR_DIM, @object
	.size	CHAR_DIM, 4
CHAR_DIM:
	.word	14
	.word	10
	.globl	_log_line
	.section	.bss
	.type	_log_line, @object
	.size	_log_line, 1
_log_line:
	.zero	1
	.globl	_aboutDocRecord
	.align	2
	.type	_aboutDocRecord, @object
	.size	_aboutDocRecord, 10
_aboutDocRecord:
	.zero	10
	.comm	_aboutBoxRef,4,2
	.comm	_game,23200,2
	.comm	_window,4,2
	.ident	"GCC: (GNU) 9.1.0"
